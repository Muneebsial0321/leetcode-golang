/*
 * @lc app=leetcode id=121 lang=golang
 *
 * [121] Best Time to Buy and Sell Stock
 */

// @lc code=start
// package main

// import "fmt"

// func main() { maxProfit([]int{900,510,174,329,873,382,279,855,396,810,322,192,442,775,445,861,303,975,478,543,87,875,283,740,376,156,521,462,987,683,462,792,491,641,359,423,795,459,503,443,935,940,120,579,945,916,509,513,964,666,812,244,565,896,174,546,837,383,961,0,486,221,770,595,65,222,576,224,566,916,249,70,101,155,2,879,972,390,420,267,221,879,719,329,845,831,836,617,534,979,761,590,346,866,947,838,96,430,137,370,870,261,923,388,405,438,163,250,625,552,158,916,711,384,361,382,862,321,607,493,850,22,802,261,254,484,221,535,449,143,43,982,631,844,343,280,214,595,151,646,522,463,890,759,237,796,231,617,298,178,264,489,655,645,188,180,443,772,503,376,471,741,660,710,877,206,807,230,743,168,336,10,675,152,223,828,183,323,914,305,612,922,608,670,803,744,539,978,899,309,696,579,209,884,821,690,245,165,945,262,90,732,746,190,160,559,463,414,339,900,198,285,514,421,221,408,237,597,35,802,898,217,97,78,839,609,762,387,542,678,641,381,762,130,115,424,162,258,785,958,607,499,534,643,935,866,104,123,463,749,473,669,363,11,427,886,923,638,240,837,873,633,47,629,72,1,278,363,383,552,741,842,946,392,80,601,245,195,464,910,905,499,348,267,942,727,745,177,243,799,456,168,545,778,269,239,859,381,786,699,317,87,807,933,698,261,927,271,883,481,40,318,788,258,269,478,657,235,69,2,869,392,633,705,903,445,54,760,627,697,529,13,372,916,496,631,40,515,713,360,946,435,414,854,621,620,292,263,795,243,33,709,817,563,659,586,36,156,427,672,874,436,301,35,177,32,907,331,689,949,698,324,824,408,109,77,668,932,792,264,814,234,882,765,630,845,143,566,238,636,465,459,400,887,832,462,107,538,634,77,98,886,120,127,789,213,95,651,591,554,343,668,717,407,868,185,891,860,274,550,764,393,27,557,328,626,492,207,636,274,617,147,243,625,75,6,885,199,993,487,93,199,962,882,839,727,574,697,24,368,766,325,329,741,852,211,276,118,831,476,415,449,868,265,920,227,293,983,186,501,713,63,899,695,365,69,933,281,215,939,187,151,252,370,8,252,707,861,931,471,176,530,802,571,835,515,477,835,366,497,477,745,309,391,349,979,913,776,278,223,498,922,389,960,364,266,572,156,652,946,468,111,488,65,389,710,400,796,262,558,141,643,614,747,270,474,426,293,170,753,83,833,747,677,213,585,706,104,954,630,313,594,404,388,588,779,543,495,69,247,862,958,937,746,502,31,492,382,507,633,843,54,332,190,743,45,930,283,902,995,745,684,805,496,87,625,26,452,645,530,192,58,168,472,718,834,444,350,461,318,828,568,213,212,839,418,990,434,546,276,634,874,829,777,221,879,594,356,193,219,217,233,752,664,997,404,117,363,778,539,401,192,684,134,548,233,131,418,232,772,350,781,308,580,294,516,301,641,353,496,380,422,657,991,72,364,716,669,518,199,785,803,862,820,214,702,203,464,946,446,550,866,764,770,163,147,80,799,440,323,63,359,376,179,784,412,189,775,926,323,145,650,482,35,118,877,904,427,888,862,344,75,408,256,82,811,927,144,91,930,182,17,777,531,175,648,173,634,515,653,407,256,525,660,911,525,780,726,327,304,79,779,548,763,374,44,531,783,395,82,517,114,43,186,728,344,256,625,632,128,324,740,788,701,964,702,209,841,157,707,396,167,760,326,728,754,162,602,659,203,112,29,884,63,817,546,906,681,810,230,429,436,72,658,841,921,155,870,436,971,400,564,393,817,70,630,268,9,453,346,531,788,414,341,121,395,136,71,284,771,890,988,464,292,903,494,145,915,591,986,301,215,147,104,39,156,625,280,243,477,576,164,642,173,82,819,706,848,619,71,402,119,407,809,994,255,577,532,984,622,419,278,472,247,878,322,870,866,750,866,884,496,983,916,749,696,574,188,97,77,521,975,480,332,565,844,914,229,537,704,361,530,558,681,87,141,891,506,59,609,653,775,93,863,982,55,736,424,859,37,909,693,282,510,731,569,460,666,726,861,598,636,842,882,212,304,877,224,861,420,141,557,1,825,119,563,134,935,309,722,750,439,8,793,274,565,870,296,565,836,953,792,958,757,432,128,431,792,237,781,281,830,959,831,145,350,761,627,964,543,246,992,172,752,62,754,213,131,292,176,88,707,843,962,101,68,765,929,29,625,342,155,1,945,251,953,982,640,973,207,457,307,868,187,949,321,66,975,170,825,249,684,370,256,85,608,885,994,320,517,933,891,650,888,593,669,958,798,271,852,799,912,667,792,636,806,514,775,610,614,827,715,292,345,666,220,840,612,598,940,22,539,402,245,350,822,655,9,314,435,517,854,662,385,464,607,104,716,864,794,28,69,711,66,311,179,820,628,311,835,54,343,115,564,707,517,684,237,629,459,36,62,505,723,161,503,887,869,223,214,391,485,436,858,318,441,396,709,697,663,329,687,380,966,395,226,901,292,694,649,371,146,308,395,450,860,482,170,128,419,36,700,770,141,604,173,964,245,986,790,178,812,49,151,51,578,263,32,102,868,834,108,617,581,896,848,851,846,911,417,364,457,162,598,665,233,577,538,976,170,386,194,768,867,823,106,674,758,477,549,99,650,997,323,481,750,540,884,977,33,241,543,311,41,512,338,400,798,850,145,414,467,259,772,394,763,711,629,736,777,123,272,15,889,717,721,352,172,926,561,66,703,628,571,636,885,838,480,175,609,95,11,681,971,725,668,477,399,834,954,748,318,812,495,195,934,798,517,662,444,386,893,587,18,88,689,766,503,144,212,811,336,671,654,653,330,315,635,224,658,277,289,322,23,373,523,44,727,940,942,377,875,827,576,677,858,971,260,167,7,62,976,190,846,627,632,203,313,343,95,353,818,282,380,106,778,522,67,534,715,492,7,693,992,795,416,425,290,109,297,613,180,568,194,146,45,32,922,814,22,722,381,560,951,380,199,378,680,495,23,234,298,28,888,421,928,264,522,245,566,365,408,644,10,895,706,610,450,262,294,591,49,77,852,148,393,130,790,994,723,2,434,528,563,949,192,649,390,322,554,640,552,999,175,275,649,537,452,166,672,944,490,734,270,831,773,882,5,869,325,430,603,143,396,629,873,490,879,234,618,255,315,633,534,812,473,444,644,256,837,737,617,319,920,980,543,732,901,368,666,576,597,512,905,299,582,218,214,319,511,975,355,94,336,750,93,502,328,367,712,936,915,623,348,441,978,666,65,91,671,427,897,328,983,922,615,396,244,674,24,950,896,94,4,291,311,442,812,280,534,706,834,15,491,194,995,527,32,470,391,913,973,691,927,60,291,488,408,211,744,455,858,461,896,651,511,965,676,919,600,758,846,660,70,315,986,468,824,81,886,424,699,859,41,139,154,843,891,224,860,633,977,5,529,14,604,878,56,468,186,470,18,404,475,227,561,282,253,142,6,16,494,829,612,108,629,789,872,549,349,826,208,900,401,895,481,903,777,146,822,564,260,104,814,763,367,988,479,120,216,995,495,314,373,805,563,972,357,12,237,636,644,121,839,682,600,166,342,33,216,243,773,141,656,11,633,617,511,751,61,609,21,737,569,965,971,348,195,543,588,863,262,285,964,976,781,896,814,252,410,65,3,996,146,997,389,917,3,488,512,678,767,434,213,912,963,984,711,676,142,948,129,343,177,803,157,607,427,44,939,82,454,925,994,390,71,109,502,470,793,519,739,286,457,526,556,615,622,38,353,528,746,790,491,916,97,329,254,775,926,230,378,967,865,612,653,232,697,832,25,763,915,36,356,742,442,910,537,838,748,490,541,430,5,265,307,11,557,277,397,217,65,17,911,919,698,247,534,192,308,47,510,607,811,438,387,828,522,345,19,547,139,285,122,885,78,218,804,540,359,179,905,183,793,192,694,3,688,274,630,544,61,546,658,753,29,316,544,492,373,200,9,430,613,250,851,5,333,22,198,632,532,765,317,666,977,757,323,92,632,157,808,450,485,382,457,369,997,573,629,326,44,444,448,223,32,834,665,749,234,709,658,787,878,556,978,388,626,924,445,574,320,877,92,461,733,990,489,566,625,982,788,215,177,53,604,483,544,212,690,274,710,988,841,526,694,96,438,518,236,900,759,687,81,371,552,771,348,704,756,108,123,575,418,920,781,641,522,134,341,541,801,296,102,587,63,737,274,391,703,565,964,9,373,0,459,371,879,383,7,761,684,861,930,937,906,144,300,454,500,282,158,744,800,195,932,873,986,897,452,518,171,165,787,345,525,120,153,548,481,52,555,489,622,767,560,933,975,851,112,293,39,363,946,354,639,119,682,884,254,301,401,763,943,49,858,535,89,876,105,858,14,914,896,46,993,57,126,677,194,112,431,97,308,364,931,192,711,997,192,547,459,104,851,665,339,416,82,476,628,818,995,305,302,803,146,597,474,49,898,759,116,680,805,149,148,658,94,631,711,921,864,77,315,847,536,450,962,252,102,858,3,273,560,769,414,385,936,999,951,187,949,927,111,771,865,716,566,186,263,651,961,472,248,165,197,455,512,400,4,996,566,519,47,535,11,303,542,187,581,92,6,624,519,858,139,338,113,440,354,218,562,616,374,416,409,585,209,136,400,305,298,33,924,882,209,43,236,782,129,214,34,604,975,536,623,531,494,287,581,828,61,708,449,883,137,532,619,846,794,306,878,446,776,732,382,992,838,467,712,179,911,430,28,778,939,612,489,992,243,999,416,293,735,711,576,194,28,917,499,628,370,696,193,237,124,253,576,744,285,138,361,577,248,531,955,23,496,512,632,111,531,624,220,516,923,753,286,271,487,990,96,808,550,409,522,343,767,905,569,889,861,590,56,236,68,168,761,140,41,593,574,221,434,251,629,427,151,872,532,432,143,943,726,572,100,382,260,757,240,296,878,662,619,422,267,27,674,304,966,244,433,452,94,278,711,727,697,385,931,165,939,643,847,448,295,5,308,675,370,753,223,418,280,174,48,3,165,47,498,817,758,794,397,558,951,502,136,981,89,699,46,478,558,564,868,216,928,143,755,236,336,912,922,706,433,242,305,222,777,26,907,270,978,465,511,338,872,525,839,295,257,192,230,588,538,50,437,833,59,498,192,463,373,368,892,274,101,24,676,120,913,845,761,83,100,805,813,888,544,898,451,165,36,833,909,844,320,417,494,623,447,736,833,125,52,106,435,757,534,709,91,379,974,685,454,23,308,105,442,604,140,775,727,637,755,779,793,760,949,144,157,384,716,994,486,898,593,803,836,935,296,200,794,43,603,113,620,649,86,115,220,973,24,836,280,107,727,613,2,235,145,387,133,476,230,331,963,469,724,979,261,986,346,93,670,507,875,259,95,305,38,399,280,901,770,602,542,252,962,400,434,680,888,539,607,300,586,947,14,541,702,733,799,493,779,867,228,840,187,363,941,880,987,66,338,600,105,823,360,947,334,141,472,515,421,941,684,471,43,483,105,63,693,739,613,681,525,701,62,321,987,40,819,977,989,444,887,113,64,239,297,650,671,520,352,220,416,675,602,338,41,13,568,749,903,30,638,800,73,181,967,674,688,955,915,721,148,460,955,337,428,690,790,206,67,843,835,479,329,766,181,998,498,824,41,803,992,69,619,629,190,158,646,388,836,730,753,724,178,798,263,604,237,649,370,868,167,641,471,399,203,827,805,830,486,217,163,933,705,679,33,347,364,179,359,894,845,908,659,333,856,731,781,607,471,822,702,531,887,902,541,87,88,148,115,805,906,121,212,535,3,
// }) }

func maxProfit(prices []int) int {
	if len(prices) < 2 {
		return 0
	}

	minPrice := math.MaxInt32
	maxProfit := 0

	for _, price := range prices {
		if price < minPrice {
			minPrice = price 
		} else if price-minPrice > maxProfit {
			maxProfit = price - minPrice
		}
	}

	return maxProfit
}

func max(arr []int) int {

	if len(arr) == 1 {
		return 0
	}

	maxNum := arr[0]
	for i := 0; i < len(arr); i++ {
		if maxNum < arr[i] {
			maxNum = arr[i]
		}
	}

	if maxNum < 0 {
		maxNum = 0
	}
	return maxNum
}

// @lc code=end
